// Define the transformation to convert Celsius to Fahrenheit
transform TempConvert {
    from celsius oftype decimal;
    to fahrenheit oftype decimal;
    fahrenheit: (celsius * 9/5) + 32;
}

pipeline TemperaturePipeline {

    // Step 1: Download the zip file from the source URL
    block TemperatureExtractor oftype HttpExtractor {
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }

    // Step 2: Unzip the downloaded file
    block TemperatureArchiveInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    // Step 3: Select the "data.csv" file from the extracted archive
    block TemperatureFilePicker oftype FilePicker {
        path: "/data.csv";
    }

    // Step 4: Interpret the CSV file
    block TemperatureCSVInterpreter oftype CSVInterpreter {
        delimiter: ";";
    }

    // Step 5: Select the relevant columns from the CSV file
    block ColDataSelector oftype CellRangeSelector {
        select: range A1:J*; // Select columns A to J (from "Geraet" to "Batterietemperatur in Â°C")
    }

    // Step 6: Rename columns to English
    block ColumnRenamer oftype CellWriter {
        at: range A1:J1;  // Writing the headers to the first row
        write: ["id", "producer", "model", "month", "temperature", "battery_temperature"];
    }

    // Step 7: Convert temperature columns from Celsius to Fahrenheit
    block TemperatureTableTransformer oftype TableTransformer {
        inputColumns: ["temperature"];
        transform: TempConvert;
    }

    block BatteryTemperatureTableTransformer oftype TableTransformer {
        inputColumns: ["battery_temperature"];
        transform: TempConvert;
    }

    // Step 8: Validate data (for example, ensuring 'id' is greater than 0)
    block IDValidator oftype RowValidator {
        condition: "id > 0";
    }

    // Step 9: Write the data to SQLite database
    block TemperatureSQLiteLoader oftype SQLiteLoader {
        table: "temperatures";
        file: "temperatures.sqlite";
    }

    // Pipeline Flow:
    TemperatureExtractor
        -> TemperatureArchiveInterpreter
        -> TemperatureFilePicker
        -> TemperatureCSVInterpreter
        -> ColDataSelector
        -> ColumnRenamer
        -> TemperatureTableTransformer
        -> BatteryTemperatureTableTransformer
        -> IDValidator
        -> TemperatureSQLiteLoader;

}
