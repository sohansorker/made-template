// Transform data: syntax: https://jvalue.github.io/jayvee/docs/user/transforms
transform TempConvert
{
  from celsius oftype decimal;
  to fahrenheit oftype decimal;

  fahrenheit: (celsius * 9/5) + 32;
}

pipeline TemperaturePipeline {

    // Download and unzip data
    block TemperatureExtractor oftype HttpExtractor {
        // https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }

    // Unzipping Data
    block TemperatureArchiveInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    // Use the “data.csv” in the zip file 
    block TemperatureFilePicker oftype FilePicker {
        path: "/data.csv";
    }

    block TemperatureFileInterpreter oftype TextFileInterpreter{}

    block TemperatureCSVInterpreter oftype CSVInterpreter {
        delimiter: ";";
    }

    block ColDataSelector oftype CellRangeSelector {select: range A1:K*;}
    block TemperaturesCellWriter1 oftype CellWriter {
        at:range A1:E1; 
        write:["id", 
        "producer",  
        "model",     
        "month",     
        "temperature"
        ];
    }

    // “Batterietemperatur in °C” to “battery_temperature”
    block TemperaturesCellWriter2 oftype CellWriter { 
        at:cell J1; 
        write:["battery_temperature"];
        }


    // Reshape data
    block TemperatureTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "id" oftype integer,
            "producer" oftype text,
            "model" oftype text,
            "month" oftype integer,
            "temperature" oftype decimal,
            "battery_temperature" oftype decimal,
        ];
    }

    block TemperatureTableTransformer oftype TableTransformer {
        inputColumns: ['temperature'];
        outputColumn: 'temperature';
        use: TempConvert;
    }

    block BatterieTemperatureTableTransformer oftype TableTransformer {
        inputColumns: ['battery_temperature'];
        outputColumn: 'battery_temperature';
        use: TempConvert;
    }
    

    // Write data into a SQLite database called “temperatures.sqlite”, in the table “temperatures”
    block TemperatureSQLiteLoader oftype SQLiteLoader {
        table: 'temperatures';
        file: 'temperatures.sqlite';
    }

    TemperatureExtractor
        ->TemperatureArchiveInterpreter
        ->TemperatureFilePicker
        ->TemperatureFileInterpreter
        ->TemperatureCSVInterpreter
        -> TemperaturesCellWriter1
        -> TemperaturesCellWriter2
        ->ColDataSelector
        ->TemperatureTableInterpreter
        ->TemperatureTableTransformer
        ->BatterieTemperatureTableTransformer
        ->TemperatureSQLiteLoader;
        
}
